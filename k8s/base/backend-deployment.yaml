apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotgigs-backend
  labels:
    app: hotgigs-backend
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hotgigs-backend
  template:
    metadata:
      labels:
        app: hotgigs-backend
        component: api
    spec:
      containers:
      - name: backend
        image: ghcr.io/businessintelli/hitgigs-backend:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: FLASK_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: redis-url
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: supabase-url
        - name: SUPABASE_KEY
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: supabase-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: openai-api-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: hotgigs-secrets
              key: jwt-secret-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: hotgigs-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: hotgigs-logs-pvc
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: hotgigs-backend-service
  labels:
    app: hotgigs-backend
spec:
  selector:
    app: hotgigs-backend
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hotgigs-uploads-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hotgigs-logs-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hotgigs-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - api.hotgigs.ai
    secretName: hotgigs-tls
  rules:
  - host: api.hotgigs.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hotgigs-backend-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hotgigs-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hotgigs-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

